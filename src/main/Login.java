/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package main;

import java.io.*;
import java.sql.ResultSet;
import javax.swing.*;
import main.LoginSession;
import java.util.*;
import java.nio.charset.StandardCharsets;
import java.text.ParseException;

/**
 *
 * @author Administrator
 * EB1/56064/21 - VICTOR PRESTON
 * EB1/52821/21 -ISAAC MUTURI
 * EB1/56066/21 - STANELY AGOTI
 * EB1/56386/21 - NIMROD WALWE
 * EB1/56065/21 - DENNIS KIPKOECH
 * EB1/56042/21 - AUSTIN NJOROGE
 * EB1/56429/21 - NIMROD KIBET
 * EB1/40762/19 - GIBSON KIMONO
 * EB1/56067/21 - ANTHONY KIPLIMO
 * EB1/56132/21 - CHARITY MANONO
 */
public class Login extends javax.swing.JFrame{

    /**
     * Creates new form Login
     */
    public Login() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backgroundLogin = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        loginButton = new javax.swing.JButton();
        emailInput = new javax.swing.JTextField();
        emailLabel = new javax.swing.JLabel();
        passwordLabel = new javax.swing.JLabel();
        jPasswordField1 = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        backgroundLogin.setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(223, 49, 80));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("LOGIN FORM");

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/main/images/login.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addContainerGap(68, Short.MAX_VALUE))
        );

        loginButton.setBackground(new java.awt.Color(223, 49, 80));
        loginButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        loginButton.setForeground(new java.awt.Color(255, 255, 255));
        loginButton.setText("Login");
        loginButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                loginButtonMousePressed(evt);
            }
        });

        emailLabel.setText("Email");

        passwordLabel.setText("Password");

        jPasswordField1.setText("jPasswordField1");

        javax.swing.GroupLayout backgroundLoginLayout = new javax.swing.GroupLayout(backgroundLogin);
        backgroundLogin.setLayout(backgroundLoginLayout);
        backgroundLoginLayout.setHorizontalGroup(
            backgroundLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, backgroundLoginLayout.createSequentialGroup()
                .addContainerGap(159, Short.MAX_VALUE)
                .addGroup(backgroundLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(loginButton, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(backgroundLoginLayout.createSequentialGroup()
                        .addGroup(backgroundLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(emailLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(passwordLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 69, Short.MAX_VALUE))
                        .addGap(27, 27, 27)
                        .addGroup(backgroundLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPasswordField1, javax.swing.GroupLayout.DEFAULT_SIZE, 327, Short.MAX_VALUE)
                            .addComponent(emailInput))
                        .addGap(204, 204, 204))))
        );
        backgroundLoginLayout.setVerticalGroup(
            backgroundLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundLoginLayout.createSequentialGroup()
                .addGroup(backgroundLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(backgroundLoginLayout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addGroup(backgroundLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(emailInput, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(emailLabel))
                        .addGap(18, 18, 18)
                        .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(passwordLabel))
                .addGap(31, 31, 31)
                .addComponent(loginButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(57, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(backgroundLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(backgroundLogin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void loginButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loginButtonMousePressed
        // TODO add your handling code here:
        // If the credentials are okay close the login frame and show the splash screen
        // Define a private loggedIn checker and set it to false
        LoginSession newUser = new LoginSession();
        String userType;
        String programId;
        boolean checkPasswordStatus;
        String email;

            
        if(isStudent()){
            userType = "student";
            checkPasswordStatus = validatePassword("student");
            if(checkPasswordStatus){
                email = getEmailFromDb("student");
                newUser.setLoginCredentials(checkPasswordStatus, email);
                programId = getStudentProgramId();
                writeNewSession(email,true,userType,programId);
 
                JOptionPane.showMessageDialog(this, "Successfully logged in. Student user ID "+newUser.getLoginUserID());
                this.setVisible(false);
                new SplashScreen().show();
            }
            else{
              JOptionPane.showMessageDialog(this, "Wrong password try again or Contact admin");
              
            }
        }
        else if(isLecturer()){
            userType = "lecturer";
            checkPasswordStatus = validatePassword("lecturer");
            if(checkPasswordStatus){
                email = getEmailFromDb("lecturer");
                newUser.setLoginCredentials(checkPasswordStatus, email);
                programId = getLecturerProgramId();
                writeNewSession(email,true,userType,programId);
 
                JOptionPane.showMessageDialog(this, "Successfully logged in. lecturer user ID "+newUser.getLoginUserID());
                this.setVisible(false);
                new SplashScreen().show();
            }
            else{
              JOptionPane.showMessageDialog(this, "Wrong password try again or Contact admin");             
            }
        }
        else if(isAdmin()){
            userType = "admin";
            checkPasswordStatus = validatePassword("users");
            if(checkPasswordStatus){
                email = getEmailFromDb("users");
                newUser.setLoginCredentials(checkPasswordStatus, email);
                programId = "none";
                writeNewSession(email,true,userType,programId);
 
                JOptionPane.showMessageDialog(this, "Successfully logged in. Admin user ID "+newUser.getLoginUserID());               
                
                            
                this.setVisible(false);
                new SplashScreen().show();
            }
            else{
              JOptionPane.showMessageDialog(this, "Wrong password try again or Contact admin");             
            }
        }
        else{
            JOptionPane.showMessageDialog(this, "Invalid email...User not found contact admin for futher assistance");
        }

    }//GEN-LAST:event_loginButtonMousePressed

    public boolean validatePassword(String table){
        try{
            Conn newConnection = new Conn();
            boolean isPasswordValid = false;

            String passwordQuery = "SELECT * FROM "+table+" WHERE password='"+this.jPasswordField1.getText()+"'";
            
            ResultSet rs2 = newConnection.s.executeQuery(passwordQuery);
            rs2.next();
            
            if(rs2.getString("password").equalsIgnoreCase(this.jPasswordField1.getText())){
                isPasswordValid = true;
                System.out.println(rs2.getString("password")+" exists");
                return isPasswordValid;
            }
            rs2.close();
        }
        catch(Exception e){
            System.out.println(e);
        }
        return false;
    }
    public String getEmailFromDb(String table){
        try{
            Conn newConnection = new Conn();
            
            String emailQuery = "SELECT * FROM "+table+" WHERE email='"+this.emailInput.getText().toLowerCase()+"'";
            
            // System.out.format("%s","%s",this.emailInput.getText(),this.jPasswordField1.getText());
            ResultSet rs1 = newConnection.s.executeQuery(emailQuery);
            rs1.next();
            return rs1.getString("email");
        }
        catch(Exception e){
            System.out.println(e);
        }
        return "";
    }
    public int writeNewSession(String email, boolean loginstate, String userType, String programId){
        try{
            FileWriter writer = new FileWriter("loginsessions.txt", StandardCharsets.UTF_8,true);
            writer.write(email+","+loginstate+","+userType+","+programId+"\n");
            writer.close();
            return 1;
        }
        catch(IOException e){
            e.printStackTrace();
        }
        return 0;
    } 
    public boolean isStudent(){
        try{
            Conn newConnection = new Conn();
            
            String emailQuery = "SELECT * FROM student WHERE email='"+this.emailInput.getText().toLowerCase()+"'";
            
            // System.out.format("%s","%s",this.emailInput.getText(),this.jPasswordField1.getText());
            ResultSet rs1 = newConnection.s.executeQuery(emailQuery);
            if(rs1.next()){
                return true;
            }
        }
        catch(Exception e){
            System.out.println(e);
        }
        return false;
    }
    public boolean isLecturer(){
        try{
            Conn newConnection = new Conn();
            
            String emailQuery = "SELECT * FROM lecturer WHERE email='"+this.emailInput.getText().toLowerCase()+"'";
            
            // System.out.format("%s","%s",this.emailInput.getText(),this.jPasswordField1.getText());
            ResultSet rs1 = newConnection.s.executeQuery(emailQuery);
            if(rs1.next()){
                return true;
            }
        }
        catch(Exception e){
            System.out.println(e);
        }
        return false;
    }
    public boolean isAdmin(){
        try{
            Conn newConnection = new Conn();
            
            String emailQuery = "SELECT * FROM users WHERE email='"+this.emailInput.getText().toLowerCase()+"'";
            
            // System.out.format("%s","%s",this.emailInput.getText(),this.jPasswordField1.getText());
            ResultSet rs1 = newConnection.s.executeQuery(emailQuery);
            if(rs1.next()){
                return true;
            }
        }
        catch(Exception e){
            System.out.println(e);
        }
        return false;
    }
    public String getStudentProgramId(){
        try{
            Conn newConnection = new Conn();
            
            String emailQuery = "SELECT * FROM student WHERE email='"+this.emailInput.getText().toLowerCase()+"'";
            
            // System.out.format("%s","%s",this.emailInput.getText(),this.jPasswordField1.getText());
            ResultSet rs1 = newConnection.s.executeQuery(emailQuery);
            rs1.next();
            return rs1.getString("programID");
        }
        catch(Exception e){
            System.out.println(e);
        }
        return "";
    }
    public String getLecturerProgramId(){
        try{
            Conn newConnection = new Conn();
            
            String emailQuery = "SELECT * FROM lecturer WHERE email='"+this.emailInput.getText().toLowerCase()+"'";
            
            // System.out.format("%s","%s",this.emailInput.getText(),this.jPasswordField1.getText());
            ResultSet rs1 = newConnection.s.executeQuery(emailQuery);
            rs1.next();
            return rs1.getString("programID");
        }
        catch(Exception e){
            System.out.println(e);
        }
        return "";
    }
    public void displayErroMessage(){
    
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel backgroundLogin;
    private javax.swing.JTextField emailInput;
    private javax.swing.JLabel emailLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JButton loginButton;
    private javax.swing.JLabel passwordLabel;
    // End of variables declaration//GEN-END:variables
}
